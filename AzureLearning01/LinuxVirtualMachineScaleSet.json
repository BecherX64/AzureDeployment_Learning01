{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B1s",
		"minLength": 1,
		"allowedValues": [
			"Standard_B1ms",
			"Standard_A1",
			"Standard_B1s",
			"Standard_DS1v2",
			"Standard_B2s"
		]
    },
    "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "16.04-LTS",
      "allowedValues": [
        "14.04-LTS",
		"16.04-LTS"
      ],
      "metadata": {
        "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version. Allowed values are: 15.10, 14.04.4-LTS."
      }
    },
    "vmssName": {
      "type": "string",
      "metadata": {
        "description": "DNS name used for public IP addresses and as base for naming other resources. Must be globally unique and 3 to 61 characters long."
      },
      "minLength": 3,
      "maxLength": 61
    },
    "instanceCount": {
      "type": "int",
		"metadata": {
			"description": "Number of VM instances (max 5)"
		},
			"allowedValues": [
				1,
				3,
				5
			],
			"maxValue": 5
    },
    "adminUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Administrator username on all VMs"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Administrator password on all VMs"
      }
    },
	"vnetAddressSpace": {
		"type": "string",
		"defaultValue": "10.30.0.0/24"
	},
	"subnetAddressSpace": {
		"type": "string",
		"defaultValue": "10.30.0.0/24"
	}
  },
	"variables": {
		"location": "[resourceGroup().location]",
		"storageAccountType": "Standard_LRS",
		"uniqueSuffix": "[toLower(substring(uniqueString(resourceGroup().id),0,3))]",
		"resourceGroupBase": "[toLower(substring(resourceGroup().name,0,6))]",
		"vmssNamingInFix": "[toLower(parameters('vmssName'))]",
		"vmScaleSetSuffix": "vmss",
		"vmScaleSetName": "[concat(variables('vmssNamingInFix'), variables('uniqueSuffix'), variables('vmScaleSetSuffix'))]",
		"newStorageAccountSuffix": "sa",
		"uniqueStorageAccountArray": [
			"[toLower(concat(variables('resourceGroupBase'),variables('newStorageAccountSuffix'), '0', variables('uniqueSuffix')))]",
			"[toLower(concat(variables('resourceGroupBase'),variables('newStorageAccountSuffix'), '1', variables('uniqueSuffix')))]",
			"[toLower(concat(variables('resourceGroupBase'),variables('newStorageAccountSuffix'), '2', variables('uniqueSuffix')))]",
			"[toLower(concat(variables('resourceGroupBase'),variables('newStorageAccountSuffix'), '3', variables('uniqueSuffix')))]",
			"[toLower(concat(variables('resourceGroupBase'),variables('newStorageAccountSuffix'), '4', variables('uniqueSuffix')))]"
		],
		"vhdContainerNameSuffix": "vhd",
		"vhdContainerName": "[concat(variables('resourceGroupBase'), variables('vhdContainerNameSuffix'), variables('uniqueSuffix'))]",
		"osDiskNameSuffix": "osdisk",
		"osDiskName": "[concat(variables('vmssNamingInFix'), variables('osDiskNameSuffix'))]",
		"addressPrefix": "[parameters('vnetAddressSpace')]",
		"subnetPrefix": "[parameters('subnetAddressSpace')]",
		"virtualNetworkNameSuffix": "VNET",
		"virtualNetworkName": "[concat(variables('resourceGroupBase'), variables('virtualNetworkNameSuffix'))]",
		"publicfIPAddressNameSuffix": "PIP",
		"publicIPAddressName": "[concat(variables('resourceGroupBase'),variables('publicfIPAddressNameSuffix'))]",
		"subnetNameSuffix": "Subnet",
		"subnetName": "[concat(variables('resourceGroupBase'), variables('subnetNameSuffix'))]",
		"loadBalancerNameSuffix": "LB",
		"loadBalancerName": "[concat(variables('resourceGroupBase'), variables('loadBalancerNameSuffix'))]",
		"publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
		"lbID": "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]",
		"natPoolNameSuffix": "natpool",
		"natPoolName": "[concat(variables('loadBalancerName'), variables('natPoolNameSuffix'))]",
		"bePoolNameSuffix": "bepool",
		"bePoolName": "[concat(variables('loadBalancerName'), variables('bePoolNameSuffix'))]",
		"nicNameSuffix": "nic",
		"nicName": "[concat(variables('vmssNamingInFix'), variables('nicNameSuffix'))]",
		"ipConfigNameSuffix": "ipconfig",
		"ipConfigName": "[concat(variables('vmssNamingInFix'), variables('ipConfigNameSuffix'))]",
		"domainNameLabelName": "[concat(variables('vmssNamingInFix'), variables('uniqueSuffix')   )]",
		"frontEndIPConfigID": "[concat(variables('lbID'), '/frontendIPConfigurations/loadBalancerFrontEnd')]",
		"osType": {
			"publisher": "Canonical",
			"offer": "UbuntuServer",
			"sku": "[parameters('ubuntuOSVersion')]",
			"version": "latest"
		},
		"imageReference": "[variables('osType')]",
		"diagnosticsStorageAccountName": "[variables('uniqueStorageAccountArray')[0]]",
		"ladMetricsResourceId": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmssNamingInFix'))]"
	},
	"resources": [
		{
			"type": "Microsoft.Network/virtualNetworks",
			"name": "[variables('virtualNetworkName')]",
			"location": "[variables('location')]",
			"apiVersion": "2016-03-30",
			"tags": {
				"displayName": "VirtualNetwork"
			},
			"properties": {
				"addressSpace": {
					"addressPrefixes": [
						"[variables('addressPrefix')]"
					]
				},
				"subnets": [
					{
						"name": "[variables('subnetName')]",
						"properties": {
							"addressPrefix": "[variables('subnetPrefix')]"
						}
					}
				]
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[variables('uniqueStorageAccountArray')[copyIndex()]]",
			"location": "[variables('location')]",
			"apiVersion": "2016-01-01",
			"tags": {
				"displayName": "StorageAccounts"
			},
			"copy": {
				"name": "storageLoop",
				"count": "[length(variables('uniqueStorageAccountArray'))]"
			},
			"sku": {
				"name": "[variables('storageAccountType')]"
			},
			"kind": "Storage"
		},
		{
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[variables('publicIPAddressName')]",
			"location": "[variables('location')]",
			"apiVersion": "2016-03-30",
			"tags": {
				"displayName": "PublicIP"
			},
			"properties": {
				"publicIPAllocationMethod": "Dynamic",
				"dnsSettings": {
					"domainNameLabel": "[variables('domainNameLabelName')]"
				}
			}
		},
		{
			"type": "Microsoft.Network/loadBalancers",
			"name": "[variables('loadBalancerName')]",
			"location": "[variables('location')]",
			"apiVersion": "2016-03-30",
			"tags": {
				"displayName": "LoadBalancer"
			},
			"dependsOn": [
				"[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
			],
			"properties": {
				"frontendIPConfigurations": [
					{
						"name": "LoadBalancerFrontEnd",
						"properties": {
							"publicIPAddress": {
								"id": "[variables('publicIPAddressID')]"
							}
						}
					}
				],
				"backendAddressPools": [
					{
						"name": "[variables('bePoolName')]"
					}
				],
				"inboundNatPools": [
					{
						"name": "[variables('natPoolName')]",
						"properties": {
							"frontendIPConfiguration": {
								"id": "[variables('frontEndIPConfigID')]"
							},
							"protocol": "tcp",
							"frontendPortRangeStart": 50000,
							"frontendPortRangeEnd": 50099,
							"backendPort": 22
						}
					}
				]
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachineScaleSets",
			"name": "[variables('vmScaleSetName')]",
			"location": "[variables('location')]",
			"apiVersion": "2017-03-30",
			"tags": {
				"displayName": "VMScaleSet"
			},
			"dependsOn": [
				"storageLoop",
				"[variables('lbID')]",
				"[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
			],
			"sku": {
				"name": "[parameters('vmSize')]",
				"tier": "Standard",
				"capacity": "[parameters('instanceCount')]"
			},
			"properties": {
				"overprovision": true,
				"upgradePolicy": {
					"mode": "Manual"
				},
				"virtualMachineProfile": {
					"storageProfile": {
						"osDisk": {
							"vhdContainers": [
								"[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('uniqueStorageAccountArray')[0]), '2016-01-01').primaryEndpoints.blob, variables('vhdContainerName'))]",
								"[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('uniqueStorageAccountArray')[1]), '2016-01-01').primaryEndpoints.blob, variables('vhdContainerName'))]",
								"[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('uniqueStorageAccountArray')[2]), '2016-01-01').primaryEndpoints.blob, variables('vhdContainerName'))]",
								"[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('uniqueStorageAccountArray')[3]), '2016-01-01').primaryEndpoints.blob, variables('vhdContainerName'))]",
								"[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('uniqueStorageAccountArray')[4]), '2016-01-01').primaryEndpoints.blob, variables('vhdContainerName'))]"
							],
							"name": "[variables('osDiskName')]",
							"caching": "ReadOnly",
							"createOption": "FromImage"
						},
						"imageReference": "[variables('imageReference')]"
					},
					"osProfile": {
						"computerNamePrefix": "[variables('vmScaleSetName')]",
						"adminUsername": "[parameters('adminUsername')]",
						"adminPassword": "[parameters('adminPassword')]"
					},
					"networkProfile": {
						"networkInterfaceConfigurations": [
							{
								"name": "[variables('nicName')]",
								"properties": {
									"primary": true,
									"ipConfigurations": [
										{
											"name": "[variables('ipConfigName')]",
											"properties": {
												"subnet": {
													"id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName')), '/subnets/', variables('subnetName'))]"
												},
												"loadBalancerBackendAddressPools": [
													{
														"id": "[concat(variables('lbID'), '/backendAddressPools/', variables('bePoolName'))]"
													}
												],
												"loadBalancerInboundNatPools": [
													{
														"id": "[concat(variables('lbID'), '/inboundNatPools/', variables('natPoolName'))]"
													}
												]
											}
										}
									]
								}
							}
						]
					}

				}
			}
		}
	],
	"outputs": {
		"vmssName": {
			"type": "string",
			"value": "[variables('vmScaleSetName')]"
		}

	}

}
